Given an array arr of N integers. Find the contiguous sub-array with maximum sum.

Example:

Input:
N = 5
arr[] = {1,2,3,-2,5}
Output:
9



// Code:

#include<bits/stdc++.h>
using namespace std;

// Function to find subarray with maximum sum
// arr: input array
// n: size of array
int maxSubarraySum(int arr[], int n){
    
    int max_so_far=arr[0], curr_max=arr[0];
    for(int i=1; i<n; i++){
        curr_max=max(arr[i], curr_max+arr[i]);
        max_so_far=max(curr_max, max_so_far);
    }
    return max_so_far;
}

int main()
{
    int t,n;
    
    cin>>t; //input testcases
    while(t--) //while testcases exist
    {
        
        cin>>n; //input size of array
        
        int a[n];
        
        for(int i=0;i<n;i++)
            cin>>a[i]; //inputting elements of array
        
        cout << maxSubarraySum(a, n) << endl;
    }
}
